import { RGB } from "./color"

// const log = noop
const { log } = console
test(`RGB.black === RGB.rgb(0, 0, 0)  //#000000 	`, () => { expect(RGB.black).toBe (RGB.rgb(0, 0, 0)) })
test(`RGB.white === RGB.rgb(255, 255, 255)  //#FFFFFF 	`, () => { expect(RGB.white).toBe (RGB.rgb(255, 255, 255)) })
test(`RGB.red === RGB.rgb(255, 0, 0)  //#FF0000 	`, () => { expect(RGB.red).toBe (RGB.rgb(255, 0, 0)) })
test(`RGB.lime === RGB.rgb(0, 255, 0)  //#00FF00 	`, () => { expect(RGB.lime).toBe (RGB.rgb(0, 255, 0)) })
test(`RGB.blue === RGB.rgb(0, 0, 255)  //#0000FF 	`, () => { expect(RGB.blue).toBe (RGB.rgb(0, 0, 255)) })
test(`RGB.yellow === RGB.rgb(255, 255, 0)  //	#FFFF00 	`, () => { expect(RGB.yellow).toBe (RGB.rgb(255, 255, 0)) })
test(`RGB.cyan === RGB.rgb(0, 255, 255)  // #00FFFF 	`, () => { expect(RGB.cyan).toBe (RGB.rgb(0, 255, 255)) })
test(`RGB.magenta === RGB.rgb(255, 0, 255)  // #FF00FF 	`, () => { expect(RGB.magenta).toBe (RGB.rgb(255, 0, 255)) })
test(`RGB.silver === RGB.rgb(192, 192, 192)  //#C0C0C0 	`, () => { expect(RGB.silver).toBe (RGB.rgb(192, 192, 192)) })
test(`RGB.gray === RGB.rgb(128, 128, 128)  //#808080 	`, () => { expect(RGB.gray).toBe (RGB.rgb(128, 128, 128)) })
test(`RGB.maroon === RGB.rgb(128, 0, 0)  //	#800000 	`, () => { expect(RGB.maroon).toBe (RGB.rgb(128, 0, 0)) })
test(`RGB.olive === RGB.rgb(128, 128, 0)  //#808000 	`, () => { expect(RGB.olive).toBe (RGB.rgb(128, 128, 0)) })
test(`RGB.green === RGB.rgb(0, 128, 0)  //#008000 	`, () => { expect(RGB.green).toBe (RGB.rgb(0, 128, 0)) })
test(`RGB.purple === RGB.rgb(128, 0, 128)  //	#800080 	`, () => { expect(RGB.purple).toBe (RGB.rgb(128, 0, 128)) })
test(`RGB.teal === RGB.rgb(0, 128, 128)  //#008080 	`, () => { expect(RGB.teal).toBe (RGB.rgb(0, 128, 128)) })
test(`RGB.navy === RGB.rgb(0, 0, 128)  //#000080 	`, () => { expect(RGB.navy).toBe (RGB.rgb(0, 0, 128)) })

test(`RGB.equal(RGB.black ,RGB.rgb(0, 0, 0)`,()=>{ expect(RGB.equal(RGB.black ,RGB.rgb(0, 0, 0))).toBeTruthy()})
test(`RGB.equal(RGB.white ,RGB.rgb(255, 255, 255)`,()=>{ expect(RGB.equal(RGB.white ,RGB.rgb(255, 255, 255))).toBeTruthy()})
test(`RGB.equal(RGB.red ,RGB.rgb(255, 0, 0)`,()=>{ expect(RGB.equal(RGB.red ,RGB.rgb(255, 0, 0))).toBeTruthy()})
test(`RGB.equal(RGB.lime ,RGB.rgb(0, 255, 0)`,()=>{ expect(RGB.equal(RGB.lime ,RGB.rgb(0, 255, 0))).toBeTruthy()})
test(`RGB.equal(RGB.blue ,RGB.rgb(0, 0, 255)`,()=>{ expect(RGB.equal(RGB.blue ,RGB.rgb(0, 0, 255))).toBeTruthy()})
test(`RGB.equal(RGB.yellow ,RGB.rgb(255, 255, 0)`,()=>{ expect(RGB.equal(RGB.yellow ,RGB.rgb(255, 255, 0))).toBeTruthy()})
test(`RGB.equal(RGB.cyan ,RGB.rgb(0, 255, 255)`,()=>{ expect(RGB.equal(RGB.cyan ,RGB.rgb(0, 255, 255))).toBeTruthy()})
test(`RGB.equal(RGB.magenta ,RGB.rgb(255, 0, 255)`,()=>{ expect(RGB.equal(RGB.magenta ,RGB.rgb(255, 0, 255))).toBeTruthy()})
test(`RGB.equal(RGB.silver ,RGB.rgb(192, 192, 192)`,()=>{ expect(RGB.equal(RGB.silver ,RGB.rgb(192, 192, 192))).toBeTruthy()})
test(`RGB.equal(RGB.gray ,RGB.rgb(128, 128, 128)`,()=>{ expect(RGB.equal(RGB.gray ,RGB.rgb(128, 128, 128))).toBeTruthy()})
test(`RGB.equal(RGB.maroon ,RGB.rgb(128, 0, 0)`,()=>{ expect(RGB.equal(RGB.maroon ,RGB.rgb(128, 0, 0))).toBeTruthy()})
test(`RGB.equal(RGB.olive ,RGB.rgb(128, 128, 0)`,()=>{ expect(RGB.equal(RGB.olive ,RGB.rgb(128, 128, 0))).toBeTruthy()})
test(`RGB.equal(RGB.green ,RGB.rgb(0, 128, 0)`,()=>{ expect(RGB.equal(RGB.green ,RGB.rgb(0, 128, 0))).toBeTruthy()})
test(`RGB.equal(RGB.purple ,RGB.rgb(128, 0, 128)`,()=>{ expect(RGB.equal(RGB.purple ,RGB.rgb(128, 0, 128))).toBeTruthy()})
test(`RGB.equal(RGB.teal ,RGB.rgb(0, 128, 128)`,()=>{ expect(RGB.equal(RGB.teal ,RGB.rgb(0, 128, 128))).toBeTruthy()})
test(`RGB.equal(RGB.navy ,RGB.rgb(0, 0, 128)`,()=>{ expect(RGB.equal(RGB.navy ,RGB.rgb(0, 0, 128))).toBeTruthy()})

test(`RGB.toCSS(RGB.black) === "rgb(0,0,0)"  `,()=>{ expect(RGB.toCSS(RGB.black)).toStrictEqual ("rgb(0,0,0)")})
test(`RGB.toCSS(RGB.white) === "rgb(255,255,255)"  `,()=>{ expect(RGB.toCSS(RGB.white)).toStrictEqual ("rgb(255,255,255)")})
test(`RGB.toCSS(RGB.red) === "rgb(255,0,0)"  `,()=>{ expect(RGB.toCSS(RGB.red)).toStrictEqual ("rgb(255,0,0)")})
test(`RGB.toCSS(RGB.lime) === "rgb(0,255,0)"  `,()=>{ expect(RGB.toCSS(RGB.lime)).toStrictEqual ("rgb(0,255,0)")})
test(`RGB.toCSS(RGB.blue) === "rgb(0,0,255)"  `,()=>{ expect(RGB.toCSS(RGB.blue)).toStrictEqual ("rgb(0,0,255)")})
test(`RGB.toCSS(RGB.yellow) === "rgb(255,255,0)"  `,()=>{ expect(RGB.toCSS(RGB.yellow)).toStrictEqual ("rgb(255,255,0)")})
test(`RGB.toCSS(RGB.cyan) === "rgb(0,255,255)"  `,()=>{ expect(RGB.toCSS(RGB.cyan)).toStrictEqual ("rgb(0,255,255)")})
test(`RGB.toCSS(RGB.magenta) === "rgb(255,0,255)"  `,()=>{ expect(RGB.toCSS(RGB.magenta)).toStrictEqual ("rgb(255,0,255)")})
test(`RGB.toCSS(RGB.silver) === "rgb(192,192,192)"  `,()=>{ expect(RGB.toCSS(RGB.silver)).toStrictEqual ("rgb(192,192,192)")})
test(`RGB.toCSS(RGB.gray) === "rgb(128,128,128)"  `,()=>{ expect(RGB.toCSS(RGB.gray)).toStrictEqual ("rgb(128,128,128)")})
test(`RGB.toCSS(RGB.maroon) === "rgb(128,0,0)"  `,()=>{ expect(RGB.toCSS(RGB.maroon)).toStrictEqual ("rgb(128,0,0)")})
test(`RGB.toCSS(RGB.olive) === "rgb(128,128,0)"  `,()=>{ expect(RGB.toCSS(RGB.olive)).toStrictEqual ("rgb(128,128,0)")})
test(`RGB.toCSS(RGB.green) === "rgb(0,128,0)"  `,()=>{ expect(RGB.toCSS(RGB.green)).toStrictEqual ("rgb(0,128,0)")})
test(`RGB.toCSS(RGB.purple) === "rgb(128,0,128)"  `,()=>{ expect(RGB.toCSS(RGB.purple)).toStrictEqual ("rgb(128,0,128)")})
test(`RGB.toCSS(RGB.teal) === "rgb(0,128,128)"  `,()=>{ expect(RGB.toCSS(RGB.teal)).toStrictEqual ("rgb(0,128,128)")})
test(`RGB.toCSS(RGB.navy) === "rgb(0,0,128)"  `,()=>{ expect(RGB.toCSS(RGB.navy)).toStrictEqual ("rgb(0,0,128)")})

test(`RGB.toHex(RGB.black) ===  "#000000"`,()=>{ expect(RGB.toHex(RGB.black) ).toStrictEqual("#000000")})
test(`RGB.toHex(RGB.white) ===  "#FFFFFF"`,()=>{ expect(RGB.toHex(RGB.white) ).toStrictEqual("#FFFFFF")})
test(`RGB.toHex(RGB.red) ===  "#FF0000"`,()=>{ expect(RGB.toHex(RGB.red) ).toStrictEqual("#FF0000")})
test(`RGB.toHex(RGB.lime) ===  "#00FF00"`,()=>{ expect(RGB.toHex(RGB.lime) ).toStrictEqual("#00FF00")})
test(`RGB.toHex(RGB.blue) ===  "#0000FF"`,()=>{ expect(RGB.toHex(RGB.blue) ).toStrictEqual("#0000FF")})
test(`RGB.toHex(RGB.yellow) ===   "#FFFF00"`,()=>{ expect(RGB.toHex(RGB.yellow) ).toStrictEqual("#FFFF00")})
test(`RGB.toHex(RGB.cyan) ===   " #00FFFF"`,()=>{ expect(RGB.toHex(RGB.cyan) ).toStrictEqual("#00FFFF")})
test(`RGB.toHex(RGB.magenta) ===   "#FF00FF"`,()=>{ expect(RGB.toHex(RGB.magenta) ).toStrictEqual("#FF00FF")})
test(`RGB.toHex(RGB.silver) ===  "#C0C0C0"`,()=>{ expect(RGB.toHex(RGB.silver) ).toStrictEqual("#C0C0C0")})
test(`RGB.toHex(RGB.gray) ===  "#808080"`,()=>{ expect(RGB.toHex(RGB.gray) ).toStrictEqual("#808080")})
test(`RGB.toHex(RGB.maroon) ===   "#800000"`,()=>{ expect(RGB.toHex(RGB.maroon) ).toStrictEqual("#800000")})
test(`RGB.toHex(RGB.olive) ===  "#808000"`,()=>{ expect(RGB.toHex(RGB.olive) ).toStrictEqual("#808000")})
test(`RGB.toHex(RGB.green) ===  "#008000"`,()=>{ expect(RGB.toHex(RGB.green) ).toStrictEqual("#008000")})
test(`RGB.toHex(RGB.purple) ===   "#800080"`,()=>{ expect(RGB.toHex(RGB.purple) ).toStrictEqual("#800080")})
test(`RGB.toHex(RGB.teal) ===  "#008080"`,()=>{ expect(RGB.toHex(RGB.teal) ).toStrictEqual("#008080")})
test(`RGB.toHex(RGB.navy) ===  "#000080"`,()=>{ expect(RGB.toHex(RGB.navy) ).toStrictEqual("#000080")})